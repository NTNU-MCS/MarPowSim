% [v, loadAngle, isInputValid] = busVoltage( ET, ZT, Sb_bus, Pbus, Qbus )
%
% Calculates bus voltage from Thevenin equivalent circuits, needs m-file
% generated by busSymbolic.m. There may exist 0, 1 or 2 solutions, the
% solution with the lowest internal loss is chosen. v=.95 if no solution
% exists.
%
% Inputs:
%    ET - Line-to-neutral Thevenin voltage of voltage source (per unit)
%    ZT - Thevenin impedance of voltage source 
%    Sb_bus - Rated power of connected generators to bus in Watt
%    Pbus - active load in Watt
%    Qbus -  reactive load in Watt/VA
%
% Output:
%    v - bus voltage (line-to-line)
%    loadAngle - Load angle of thevenin circuit
%    isInputValid - 0 if no valid solution exists or 1 if it does.
%
%
%    Copyright: 	NTNU, Trondheim, Norway
%    Licensed under GPL-3.0
%    Created:  	2014.07.02	Torstein Aarseth BÃ¸ <torstein.bo@sintef.no>
%    Revised:	<date>	<author> <description>
%    		<date>	<author> <description>
%

function [v, loadAngle, isInputValid] = busVoltage( ET, ZT, Sb_bus, Pbus, Qbus )
%Calculates bus voltage

pbus = Pbus/Sb_bus;
qbus = Qbus/Sb_bus;
isInputValid = 1;
if ~busVoltageIsValid(imag(ET),real(ET),pbus,qbus,imag(ZT),real(ZT))
    isInputValid = 0;
    fprintf('Voltage calculation is invalid\n')
    v = .95;
    loadAngle = pi/4;
    v = v*exp(1j*(angle(ET)-loadAngle));
    return;
end
    
if (real(ET) == 0)
    vi = busVoltageVIzeroEr(imag(ET),pbus,qbus,imag(ZT),real(ZT));
    vr = busVoltageVRzeroEr(imag(ET),pbus,qbus,imag(ZT),real(ZT));
    V = vr+vi*1j;
elseif (real(ET) > imag(ET) )
    vr = busVoltageVRnonZeroEr(imag(ET),real(ET),pbus,qbus,imag(ZT),real(ZT));
    if imag(vr(1)) ~= 0
        vr(1) = vr(2);
    elseif imag(vr(2)) ~= 0
        vr(2) = vr(1);
    end
    vi = [0;0];
    vi(1) = busVoltageVInonZeroEr(imag(ET),real(ET),pbus,qbus,real(vr(1)),imag(ZT),real(ZT));
    vi(2) = busVoltageVInonZeroEr(imag(ET),real(ET),pbus,qbus,real(vr(2)),imag(ZT),real(ZT));
    V = vr+vi*1j;
else
    vi = busVoltageVIlowEr(imag(ET),real(ET),pbus,qbus,imag(ZT),real(ZT));
  
    if imag(vi(1)) ~= 0
        vi(1) = vi(2);
    elseif imag(vi(2)) ~= 0
        vi(2) = vi(1);
    end
    vr = [0;0];
    vr(1) = busVoltageVRlowEr(imag(ET),real(ET),pbus,qbus,real(vi(1)),imag(ZT),real(ZT));
    vr(2) = busVoltageVRlowEr(imag(ET),real(ET),pbus,qbus,real(vi(2)),imag(ZT),real(ZT));
    V = vr+vi*1j;
end

%% Select solution with smallest losses:

I = (ET-V/sqrt(3))/ZT;
Ploss = 3*real((ET-V/sqrt(3)).*conj(I));
if Ploss(1)<Ploss(2)
    v = V(1);
else
    v = V(2);
end

loadAngle = angle(ET)-angle(v);
loadAngle = anglemap(loadAngle);